worker_processes 1;

user iguana iguana;
error_log  {{FILES_DIR}}/logs/nginx/error.log warn;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;

    access_log {{FILES_DIR}}/logs/nginx/access.log combined;
    sendfile on;

    upstream app_server {
        # fail_timeout=0 means we always retry an upstream even if it failed to return a good HTTP response

        # gunicorn socket
        server unix:{{APP_DIR}}/gunicorn.sock fail_timeout=0;
    }

    server {
        listen 80 deferred default_server;
        client_max_body_size 4G;

        keepalive_timeout 5;

        # path for static files
        location /static/ {
            alias /static_files/;
        }

        # path for media files
        location /media/ {
            alias {{FILES_DIR}}/media/;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://app_server;
        }
    }
}
